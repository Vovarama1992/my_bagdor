// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_OTHER")
}




model User {
  id                     Int         @id @default(autoincrement())
  phone                  String?     @unique
  email                  String?     @unique
  firstName              String?
  lastName               String?
  nickname               String?
  password               String?
  googleId               String?     @unique
  appleId                String?     @unique
  telegram               String?
  accountType            AccountType @default(CUSTOMER)
  numberOfFlightsPerYear Int         @default(0)
  isRegistered           Boolean     @default(false)
  isEmailVerified        Boolean     @default(false)
  isPhoneVerified        Boolean     @default(false)
  createdAt              DateTime    @default(now())
  updatedAt              DateTime    @updatedAt

  numberOfOrders         Int         @default(0) // –ö–æ–ª-–≤–æ –∑–∞–∫–∞–∑–æ–≤
  numberOfFlights        Int         @default(0) // –ö–æ–ª-–≤–æ –ø–µ—Ä–µ–ª–µ—Ç–æ–≤
  numberOfDeliveredOrders Int        @default(0) // –ö–æ–ª-–≤–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ (–¥–æ—Å—Ç–∞–≤–æ–∫)

  flights                Flight[]    // –†–µ–π—Å—ã, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–ø–µ—Ä–µ–≤–æ–∑—á–∏–∫–æ–º)
  orders                 Order[] 

  reviewsGiven           Review[]    @relation("ReviewFromUser")
  reviewsReceived        Review[]    @relation("ReviewToUser")

  searches               UserSearch[] // –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
}

model UserSearch {
  id        Int        @id @default(autoincrement())
  userId    Int  
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  query     String     // –°–∞–º –∑–∞–ø—Ä–æ—Å (–≥–æ—Ä–æ–¥, –∫–æ–¥ –∞–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏–∏, –Ω–æ–º–µ—Ä —Ä–µ–π—Å–∞)
  type      SearchType // –¢–∏–ø –∑–∞–ø—Ä–æ—Å–∞
  createdAt DateTime   @default(now())
}

enum SearchType {
  CITY
  AIRPORT
  FLIGHT_NUMBER
  AIRLINE_CODE
  FLIGHT_DATE 
}


enum AccountType {
  CUSTOMER
  CARRIER
}

model Flight {
  id          Int       @id @default(autoincrement())
  userId      Int       // ID –ø–µ—Ä–µ–≤–æ–∑—á–∏–∫–∞
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  departure   String    // –ê—ç—Ä–æ–ø–æ—Ä—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–∫–æ–¥, –Ω–∞–ø—Ä–∏–º–µ—Ä, SVO)
  arrival     String    // –ê—ç—Ä–æ–ø–æ—Ä—Ç –ø—Ä–∏–±—ã—Ç–∏—è (–∫–æ–¥, –Ω–∞–ø—Ä–∏–º–µ—Ä, JFK)
  date        DateTime  // –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Ä–µ–π—Å–∞
  description String    // –û–ø–∏—Å–∞–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–±–µ—Ä—É –¥–æ 5 –∫–≥")
  status      FlightStatus @default(PENDING) // –°—Ç–∞—Ç—É—Å —Ä–µ–π—Å–∞
  documentUrl String?
  orders      Order[]   // –°–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã
  createdAt   DateTime  @default(now())
  reviews     Review[]
  updatedAt   DateTime  @updatedAt
}

enum FlightStatus {
  PENDING      // –û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  CONFIRMED    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω, –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –∑–∞–∫–∞–∑–æ–≤
  IN_PROGRESS  // –í –ø—É—Ç–∏, –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã
  ARRIVED      // –ü—Ä–∏–ª–µ—Ç–µ–ª, –Ω–æ –Ω–µ –≤—Å–µ –∑–∞–∫–∞–∑—ã –¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã
  COMPLETED    // –ó–∞–≤–µ—Ä—à—ë–Ω (–≤—Å–µ –∑–∞–∫–∞–∑—ã –¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã)
  ARCHIVED
}

model Order {
  id            Int         @id @default(autoincrement())
  userId        Int         // ID –∑–∞–∫–∞–∑—á–∏–∫–∞
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  flightId      Int?        // ID —Ä–µ–π—Å–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å NULL)
  flight        Flight?     @relation(fields: [flightId], references: [id], onDelete: Cascade)
  isModerated   Boolean     @default(false) // –ü—Ä–æ—à–µ–ª –ª–∏ –º–æ–¥–µ—Ä–∞—Ü–∏—é
  isDone        Boolean     @default(false)
  
  status        OrderStatus @default(RAW)   // –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
  type          OrderType   // üîπ –¢–∏–ø –∑–∞–∫–∞–∑–∞ (–¥–æ–∫—É–º–µ–Ω—Ç—ã, –ª–∏—á–Ω—ã–µ –≤–µ—â–∏, –ø–æ–∫—É–ø–∫–∞ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞)
  name          String      // üîπ –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ü–µ—Ä–µ–≤–µ–∑—Ç–∏ –Ω–æ—É—Ç–±—É–∫")
  description   String      // üîπ –ß—Ç–æ –ø–µ—Ä–µ–≤–æ–∑–∏–º
  price         Float       // üîπ üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ)
  reward        Float       // üîπ üéÅ –í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–∑—á–∏–∫—É (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ)
  deliveryStart DateTime    // üîπ üöö –ù–∞—á–∞–ª–æ –ø–µ—Ä–∏–æ–¥–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
  deliveryEnd   DateTime    // üîπ üöö –ö–æ–Ω–µ—Ü –ø–µ—Ä–∏–æ–¥–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
  departure     String      // üîπ üìç –û—Ç–∫—É–¥–∞ (–≥–æ—Ä–æ–¥/–∞—ç—Ä–æ–ø–æ—Ä—Ç)
  arrival       String      // üîπ üìç –ö—É–¥–∞ (–≥–æ—Ä–æ–¥/–∞—ç—Ä–æ–ø–æ—Ä—Ç)
  mediaUrls     String[]    // üîπ üì∏ –°–ø–∏—Å–æ–∫ URL –Ω–∞ —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ –∑–∞–∫–∞–∑–∞

  reviews       Review[]
  createdAt     DateTime    @default(now())
}

enum OrderType {
  DOCUMENTS       // üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã
  STORE_PURCHASE  // üõç –ü–æ–∫—É–ø–∫–∞ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞
  PERSONAL_ITEMS  // üéí –õ–∏—á–Ω—ã–µ –≤–µ—â–∏
}

enum OrderStatus {
  RAW                 // –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω, –Ω–æ –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —Ä–µ–π—Å—É
  PROCESSED_BY_CUSTOMER // –ó–∞–∫–∞–∑—á–∏–∫ —É–∫–∞–∑–∞–ª —Ä–µ–π—Å –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
  PROCESSED_BY_CARRIER  // –ü–µ—Ä–µ–≤–æ–∑—á–∏–∫ –¥–æ–±–∞–≤–∏–ª –∑–∞–∫–∞–∑ –≤ —Å–≤–æ–π —Ä–µ–π—Å
  CONFIRMED           // –°–¥–µ–ª–∫–∞ –∑–∞–∫–ª—é—á–µ–Ω–∞, –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç
}

model Review {
  id          Int       @id @default(autoincrement())
  fromUserId  Int
  fromUser    User      @relation(fields: [fromUserId], references: [id], onDelete: Cascade, name: "ReviewFromUser")

  toUserId    Int
  toUser      User      @relation(fields: [toUserId], references: [id], onDelete: Cascade, name: "ReviewToUser")

  flightId    Int       
  flight      Flight    @relation(fields: [flightId], references: [id], onDelete: Cascade)
  orderId     Int       
  order       Order     @relation(fields: [orderId], references: [id], onDelete: Cascade)

  rating      Int       @default(5) // –†–µ–π—Ç–∏–Ω–≥ –æ—Ç 1 –¥–æ 5
  isModerated Boolean   @default(false)
  isDisputed  Boolean   @default(false)
  accountType AccountType
  comment     String    
  createdAt   DateTime  @default(now())
}