// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_RU")
}




model User {
  id                     Int         @id @default(autoincrement())
  phone                  String?      @unique
  email                  String?     @unique
  firstName              String?
  lastName               String?
  nickname               String?
  password               String?
  googleId               String?     @unique
  appleId                String?     @unique
  telegram               String?
  accountType            AccountType @default(CUSTOMER)
  isPhoneVerified        Boolean     @default(false)
  isEmailVerified        Boolean @default(false)
  numberOfFlightsPerYear Int         @default(0)
  isRegistered           Boolean     @default(false)
  createdAt              DateTime    @default(now())
  updatedAt              DateTime    @updatedAt

  numberOfOrders         Int         @default(0) // Кол-во заказов
  numberOfFlights        Int         @default(0) // Кол-во перелетов
  numberOfDeliveredOrders Int        @default(0) // Кол-во доставленных заказов (доставок)


  reviews                Review[]  
}

model Review {
  id          Int     @id @default(autoincrement())
  userId      Int     
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  rating      Int
  isModerated Boolean @default(false)
  comment     String
  createdAt   DateTime @default(now())
}

enum AccountType {
  CUSTOMER
  CARRIER
}