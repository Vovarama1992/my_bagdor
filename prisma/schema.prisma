// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id                      Int         @id @default(autoincrement())
  phone                   String?     @unique
  email                   String?     @unique
  firstName               String?
  lastName                String?
  nickname                String?
  password                String?
  googleId                String?     @unique
  appleId                 String?     @unique
  telegram                String?
  accountType             AccountType @default(CUSTOMER)
  numberOfFlightsPerYear  Int         @default(0)
  isRegistered            Boolean     @default(false)
  isEmailVerified         Boolean     @default(false)
  isPhoneVerified         Boolean     @default(false)
  createdAt               DateTime    @default(now())
  updatedAt               DateTime    @updatedAt
  dbRegion                DbRegion    @default(PENDING)
  tgNick                  String?
  favoriteOrders          FavoriteOrder[]
  
  

  numberOfOrders          Int         @default(0) // –ö–æ–ª-–≤–æ –∑–∞–∫–∞–∑–æ–≤
  numberOfFlights         Int         @default(0) // –ö–æ–ª-–≤–æ –ø–µ—Ä–µ–ª–µ—Ç–æ–≤
  numberOfDeliveredOrders Int        @default(0) // –ö–æ–ª-–≤–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ (–¥–æ—Å—Ç–∞–≤–æ–∫)

  flights                 Flight[]    // –†–µ–π—Å—ã, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–ø–µ—Ä–µ–≤–æ–∑—á–∏–∫–æ–º)
  customerOrders          Order[]     @relation("CustomerOrders") 
  carrierOrders           Order[]     @relation("CarrierOrders") 

  reviewsGiven            Review[]    @relation("ReviewFromUser")
  reviewsReceived         Review[]    @relation("ReviewToUser")

  searches                UserSearch[] // –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  responses               Response[]
}

enum DbRegion {
  PENDING
  RU
  OTHER
}

model UserSearch {
  id        Int        @id @default(autoincrement())
  userId    Int  
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  query     String     // –°–∞–º –∑–∞–ø—Ä–æ—Å (–≥–æ—Ä–æ–¥, –∫–æ–¥ –∞–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏–∏, –Ω–æ–º–µ—Ä —Ä–µ–π—Å–∞)
  type      SearchType // –¢–∏–ø –∑–∞–ø—Ä–æ—Å–∞
  createdAt DateTime   @default(now())
}

enum SearchType {
  CITY
  AIRPORT
  FLIGHT_NUMBER
  AIRLINE_CODE
  FLIGHT_DATE 
}


enum AccountType {
  CUSTOMER
  CARRIER
  ADMIN
}

model Flight {
  id           Int           @id @default(autoincrement())
  userId       Int
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  departure    String
  arrival      String
  date         DateTime
  description  String
  status       FlightStatus  @default(PENDING)
  documentUrl  String?
  iataNumber   String?       // üëà –Ω–æ–≤–æ–µ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ
  orders       Order[]
  responses    Response[]
  reviews      Review[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  dbRegion     DbRegion      @default(PENDING)
}
enum FlightStatus {
  PENDING      // –û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  REJECTED     // –û—Ç–∫–ª–æ–Ω–µ–Ω
  CONFIRMED    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω, –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –∑–∞–∫–∞–∑–æ–≤
  IN_PROGRESS  // –í –ø—É—Ç–∏, –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã
  ARRIVED      // –ü—Ä–∏–ª–µ—Ç–µ–ª, –Ω–æ –Ω–µ –≤—Å–µ –∑–∞–∫–∞–∑—ã –¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã
  COMPLETED    // –ó–∞–≤–µ—Ä—à—ë–Ω (–≤—Å–µ –∑–∞–∫–∞–∑—ã –¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã)
  ARCHIVED
}

model Order {
  id                Int          @id @default(autoincrement())
  userId            Int          // ID –∑–∞–∫–∞–∑—á–∏–∫–∞
  user              User         @relation("CustomerOrders", fields: [userId], references: [id], onDelete: Cascade)

  flightId          Int?
  flight            Flight?      @relation(fields: [flightId], references: [id], onDelete: Cascade)

  carrierId         Int?         // ID –ø–µ—Ä–µ–≤–æ–∑—á–∏–∫–∞
  carrier           User?        @relation("CarrierOrders", fields: [carrierId], references: [id])

  responses         Response[]
  favoriteOrders    FavoriteOrder[]
  status            OrderStatus  @default(RAW)
  type              OrderType
  name              String
  description       String
  price             Float
  weight            Float?
  reward            Float
  deliveryStart     DateTime
  deliveryEnd       DateTime
  departure         String
  arrival           String
  mediaUrls         String[]
  productLink       String?
  moderationStatus  ModerationStatus @default(PENDING) // –°—Ç–∞—Ç—É—Å –º–æ–¥–µ—Ä–∞—Ü–∏–∏
  moderationReason  String? 
  isDone            Boolean      @default(false)
  disputeStatus     DisputeStatus    @default(NO_DISPUTE) // –°—Ç–∞—Ç—É—Å —Å–ø–æ—Ä–∞
  disputeResult     String? 
  reviews           Review[]
  createdAt         DateTime     @default(now())
  dbRegion          DbRegion     @default(PENDING)
}

enum ModerationStatus {
  PENDING    // –û–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
  APPROVED   // –û–¥–æ–±—Ä–µ–Ω–æ
  REJECTED   // –û—Ç–∫–ª–æ–Ω–µ–Ω–æ
}

enum DisputeStatus {
  NO_DISPUTE    // –°–ø–æ—Ä–∞ –Ω–µ—Ç
  OPEN          // –°–ø–æ—Ä –Ω–∞—á–∞—Ç
  RESOLVED      // –°–ø–æ—Ä –∑–∞–≤–µ—Ä—à—ë–Ω
}

enum OrderType {
  DOCUMENTS       // üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã
  STORE_PURCHASE  // üõç –ü–æ–∫—É–ø–∫–∞ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞
  PERSONAL_ITEMS  // üéí –õ–∏—á–Ω—ã–µ –≤–µ—â–∏
}

enum OrderStatus {
  RAW                       // –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω, –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —Ä–µ–π—Å—É
  PROCESSED_BY_CUSTOMER     // –ó–∞–∫–∞–∑—á–∏–∫ —É–∫–∞–∑–∞–ª —Ä–µ–π—Å –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
  PROCESSED_BY_CARRIER      // –ü–µ—Ä–µ–≤–æ–∑—á–∏–∫ –¥–æ–±–∞–≤–∏–ª –∑–∞–∫–∞–∑ –≤ —Å–≤–æ–π —Ä–µ–π—Å
  CONFIRMED                 // –°–¥–µ–ª–∫–∞ –∑–∞–∫–ª—é—á–µ–Ω–∞, –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç
  TRANSFERRED_BY_CUSTOMER   // –ó–∞–∫–∞–∑—á–∏–∫ –æ—Ç–º–µ—Ç–∏–ª –ø–µ—Ä–µ–¥–∞—á—É –∑–∞–∫–∞–∑–∞
  RECEIVED_BY_CARRIER       // –ü–µ—Ä–µ–≤–æ–∑—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –ø–æ–ª—É—á–µ–Ω–∏–µ
  IN_TRANSIT                // –ó–∞–∫–∞–∑ –≤ –ø—É—Ç–∏ (—Ä–µ–π—Å –≤—ã–ª–µ—Ç–µ–ª)
  LANDED                    // –†–µ–π—Å –ø—Ä–∏–∑–µ–º–ª–∏–ª—Å—è
  TRANSFERRED_BY_CARRIER    // –ü–µ—Ä–µ–≤–æ–∑—á–∏–∫ –ø–µ—Ä–µ–¥–∞–ª –∑–∞–∫–∞–∑
  RECEIVED_BY_CUSTOMER      // –ó–∞–∫–∞–∑—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
}

model Response {
  id            Int       @id @default(autoincrement())
  orderId       Int
  order         Order     @relation(fields: [orderId], references: [id], onDelete: Cascade)
  carrierId     Int       // ID –ø–µ—Ä–µ–≤–æ–∑—á–∏–∫–∞
  carrier       User      @relation(fields: [carrierId], references: [id], onDelete: Cascade)
  flightId      Int
  flight        Flight    @relation(fields: [flightId], references: [id], onDelete: Cascade)
  message       String?
  priceOffer    Float?
  taxesAndFees  Float?    // –ù–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å–±–æ—Ä–æ–≤
  isAccepted    Boolean   @default(false)
  createdAt     DateTime  @default(now())
}

model Review {
  id          Int       @id @default(autoincrement())
  fromUserId  Int
  fromUser    User      @relation(fields: [fromUserId], references: [id], onDelete: Cascade, name: "ReviewFromUser")

  toUserId    Int
  toUser      User      @relation(fields: [toUserId], references: [id], onDelete: Cascade, name: "ReviewToUser")

  flightId    Int       
  flight      Flight    @relation(fields: [flightId], references: [id], onDelete: Cascade)
  orderId     Int
  dbRegion    DbRegion    @default(PENDING)       
  order       Order     @relation(fields: [orderId], references: [id], onDelete: Cascade)

  rating      Int       @default(5) // –†–µ–π—Ç–∏–Ω–≥ –æ—Ç 1 –¥–æ 5
  isModerated Boolean   @default(false)
  isDisputed  Boolean   @default(false)
  accountType AccountType
  comment     String    
  createdAt   DateTime  @default(now())
}

model FavoriteOrder {
  id         Int    @id @default(autoincrement())
  userId     Int
  user       User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  orderId    Int
  order      Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
}

